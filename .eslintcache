[{"C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\index.tsx":"1","C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\TodoList.tsx":"2","C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\reportWebVitals.ts":"3","C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\EditableSpan.tsx":"4","C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\store.ts":"5","C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\Reducers\\TaskReducer.ts":"6","C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\AppWithRedux.tsx":"7","C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\Reducers\\TodoListReducer.ts":"8","C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\Task.tsx":"9","C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\InputComponent.tsx":"10","C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\stories\\todolists-api.stories.tsx":"11","C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\stories\\tasks-api.stories.tsx":"12","C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\ErrorSnackBar.tsx":"13","C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\Reducers\\appReducer.ts":"14","C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\error-utils.ts":"15","C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\App.tsx":"16","C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\Login.tsx":"17","C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\tasks-api.ts":"18","C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\Reducers\\loginReduce.ts":"19","C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\LoginApi.ts":"20"},{"size":615,"mtime":1613937597417,"results":"21","hashOfConfig":"22"},{"size":3596,"mtime":1614122749811,"results":"23","hashOfConfig":"22"},{"size":425,"mtime":1609511876213,"results":"24","hashOfConfig":"22"},{"size":902,"mtime":1613942891049,"results":"25","hashOfConfig":"22"},{"size":732,"mtime":1614095764390,"results":"26","hashOfConfig":"22"},{"size":7067,"mtime":1613948204438,"results":"27","hashOfConfig":"22"},{"size":2271,"mtime":1614122798842,"results":"28","hashOfConfig":"22"},{"size":6337,"mtime":1614096380422,"results":"29","hashOfConfig":"22"},{"size":1587,"mtime":1613948204425,"results":"30","hashOfConfig":"22"},{"size":927,"mtime":1613662046426,"results":"31","hashOfConfig":"22"},{"size":2903,"mtime":1613410104065,"results":"32","hashOfConfig":"22"},{"size":3531,"mtime":1613411345617,"results":"33","hashOfConfig":"22"},{"size":1074,"mtime":1613768412876,"results":"34","hashOfConfig":"22"},{"size":1930,"mtime":1614121777881,"results":"35","hashOfConfig":"22"},{"size":653,"mtime":1613859480088,"results":"36","hashOfConfig":"22"},{"size":2336,"mtime":1614124259091,"results":"37","hashOfConfig":"22"},{"size":1936,"mtime":1614122448815,"results":"38","hashOfConfig":"22"},{"size":1833,"mtime":1613949538096,"results":"39","hashOfConfig":"22"},{"size":1729,"mtime":1614124849128,"results":"40","hashOfConfig":"22"},{"size":945,"mtime":1614123632149,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1lgi7sw",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\index.tsx",[],["84","85"],"C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\TodoList.tsx",["86"],"C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\reportWebVitals.ts",[],"C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\EditableSpan.tsx",[],"C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\store.ts",[],"C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\Reducers\\TaskReducer.ts",["87","88"],"import {TaskStateType} from \"../AppWithRedux\";\r\nimport {AddTodoListACType, RemoveTodoListACType, setApiEntityStatusAC, SetTodoListsACType} from \"./TodoListReducer\";\r\nimport {taskListsApi, TaskPriorities, TaskStatuses, TaskType, UpdateTaskType} from \"../tasks-api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {AppRootState} from \"../store\";\r\nimport {setApiStatusAC, setErrorAC} from \"./appReducer\";\r\nimport {handleServerAppError, handleServerNetworkError} from \"../error-utils\";\r\n\r\n\r\nexport type TaskActionType =\r\n    | RemoveTaskACType\r\n    | UpdateTaskACType\r\n    | AddTaskACType\r\n    | RemoveTodoListACType\r\n    | AddTodoListACType\r\n    | SetTodoListsACType\r\n    | SetTasksType\r\n\r\nexport const taskReducer = (state: TaskStateType = {}, action: TaskActionType): TaskStateType => {\r\n    switch (action.type) {\r\n\r\n        case 'Remove Task': {\r\n            const stateCopy = {...state}\r\n            stateCopy[action.todolistId] = state[action.todolistId].filter(t => t.id !== action.taskId)\r\n            return {...stateCopy}\r\n\r\n        }\r\n        case 'AddTask': {\r\n            const stateCopy = {...state}\r\n            stateCopy[action.task.todoListId] = [...stateCopy[action.task.todoListId], action.task]\r\n            return {...stateCopy}\r\n        }\r\n        case\r\n        'Update-Task': {\r\n            const stateCopy = {...state}\r\n            stateCopy[action.todolistId] = state[action.todolistId].map(t => t.id === action.taskId ? {\r\n                ...t,\r\n                ...action.model\r\n            } : t)\r\n            return {...stateCopy}\r\n        }\r\n        case'AddTodoList': {\r\n            const stateCopy = {...state}\r\n            stateCopy[action.todoList.id] = []\r\n            return {...stateCopy}\r\n\r\n        }\r\n        case'RemoveTodoList': {\r\n            const stateCopy = {...state}\r\n            delete stateCopy[action.todoId]\r\n            return {...stateCopy}\r\n        }\r\n        case 'SetTodoLists': {\r\n            let stateCopy = {...state}\r\n            action.todoLists.forEach(t => stateCopy[t.id] = [])\r\n            return stateCopy\r\n        }\r\n        case 'SetTasks': {\r\n            /*   debugger*/\r\n            const stateCopy = {...state}\r\n            stateCopy[action.todoId] = action.tasks\r\n            return stateCopy\r\n        }\r\n\r\n        default :\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const removeTaskAC = (taskId: string, todolistId: string) => {\r\n    return {\r\n        type: 'Remove Task',\r\n        taskId,\r\n        todolistId\r\n    } as const\r\n}\r\ntype RemoveTaskACType = ReturnType<typeof removeTaskAC>\r\n\r\n\r\nexport const updateTaskAC = (taskId: string, todolistId: string, model: UpdateDomainModelTaskType) => {\r\n    return {\r\n        type: 'Update-Task',\r\n        taskId,\r\n        todolistId,\r\n        model\r\n    } as const\r\n}\r\ntype UpdateTaskACType = ReturnType<typeof updateTaskAC>\r\n\r\n\r\nexport const addTaskAC = (task: TaskType) => {\r\n    return {\r\n        type: 'AddTask',\r\n        task\r\n    } as const\r\n}\r\ntype AddTaskACType = ReturnType<typeof addTaskAC>\r\n\r\nexport const setTasksAC = (todoId: string, tasks: Array<TaskType>) => {\r\n    return {\r\n        type: 'SetTasks',\r\n        todoId,\r\n        tasks\r\n    } as const\r\n}\r\ntype SetTasksType = ReturnType<typeof setTasksAC>\r\n\r\nexport const fetchTaskTC = (todoId: string) => {\r\n\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(setApiStatusAC('loading'))\r\n        /*debugger*/\r\n        taskListsApi.get(todoId)\r\n            .then((res) => {\r\n                /* debugger*/\r\n                dispatch(setTasksAC(todoId, res.data.items))\r\n                dispatch(setApiStatusAC('idle'))\r\n            })\r\n    }\r\n}\r\n\r\nexport const addTaskTC = (todoId: string, title: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(setApiStatusAC('loading'))\r\n        taskListsApi.post(todoId, title)\r\n            .then((res) => {\r\n                if (res.data.resultCode === 0) {\r\n                    dispatch(addTaskAC(res.data.data.item))\r\n                    dispatch(setApiStatusAC('idle'))\r\n                } else {\r\n                    handleServerAppError(res.data, dispatch)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                handleServerNetworkError(error, dispatch)\r\n            })\r\n    }\r\n}\r\n\r\nexport const removeTaskTC = (taskId: string, todoId: string) => {\r\n    return async (dispatch: Dispatch) => {\r\n        try {\r\n            {\r\n                dispatch(setApiStatusAC('loading'))\r\n                dispatch(setApiEntityStatusAC(todoId, 'loading'))\r\n\r\n                let res = await taskListsApi.delete(todoId, taskId)\r\n                if (res) {\r\n                    dispatch(removeTaskAC(taskId, todoId))\r\n                    dispatch(setApiStatusAC('idle'))\r\n                    dispatch(setApiEntityStatusAC(todoId, 'idle'))\r\n                }\r\n            }\r\n        } catch (err) {\r\n        } finally {\r\n        }\r\n    }\r\n}\r\n//а тут мы уже возвращаем созданную таску с сервера\r\n//мы вводем в поле инпута название такски она создается на сервере\r\n\r\nexport type UpdateDomainModelTaskType = {\r\n    title?: string\r\n    description?: string\r\n    status?: TaskStatuses\r\n    priority?: TaskPriorities\r\n    startDate?: string\r\n    deadline?: string\r\n}\r\n\r\nexport const updateTaskTC = (todoId: string, taskId: string, domainModel: UpdateDomainModelTaskType) => {\r\n    //санка может принимать параметр гетстейт это ф-ия которая ничего не принимает и возвращает стейт\r\n    return (dispatch: Dispatch, getState: () => AppRootState) => {\r\n//мы с помощью файнда находим эту таску и формеруем объект типа таски и кладем в него прежние параметры\r\n        //а тайтл меняем на тот что вводим(аргумент ф-ии title)\r\n\r\n        const task = getState().tasks[todoId].find(t => t.id === taskId)\r\n        if (!task) {\r\n            return console.warn('pzdc')\r\n        }\r\n\r\n        const apiModel: UpdateTaskType =\r\n            {\r\n                title: task.title,\r\n                description: task.description,\r\n                status: task.status,\r\n                priority: task.priority,\r\n                startDate: task.startDate,\r\n                deadline: task.deadline,\r\n                ...domainModel\r\n            }\r\n        dispatch(setApiStatusAC('loading'))\r\n        taskListsApi.put(todoId, taskId, apiModel)//передаем в запрос наш модел\r\n            .then((res) => {\r\n                if (res.data.resultCode === 0) {\r\n                    dispatch(updateTaskAC(taskId, todoId, domainModel))\r\n                    dispatch(setApiStatusAC('idle'))\r\n                } else {\r\n                    handleServerAppError(res.data, dispatch)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                handleServerNetworkError(error, dispatch)\r\n            })\r\n\r\n    }\r\n}\r\n\r\n","C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\AppWithRedux.tsx",["89"],"C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\Reducers\\TodoListReducer.ts",[],"C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\Task.tsx",[],"C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\InputComponent.tsx",[],"C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\stories\\todolists-api.stories.tsx",["90"],"C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\stories\\tasks-api.stories.tsx",["91","92","93"],"C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\ErrorSnackBar.tsx",[],"C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\Reducers\\appReducer.ts",[],"C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\error-utils.ts",[],"C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\App.tsx",["94"],"C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\Login.tsx",[],"C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\tasks-api.ts",[],"C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\Reducers\\loginReduce.ts",["95"],"C:\\Users\\djuba\\Desktop\\new\\my-app\\src\\LoginApi.ts",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":12,"column":9,"nodeType":"102","messageId":"103","endLine":12,"endColumn":17},{"ruleId":"100","severity":1,"message":"104","line":6,"column":25,"nodeType":"102","messageId":"103","endLine":6,"endColumn":35},{"ruleId":"105","severity":1,"message":"106","line":144,"column":13,"nodeType":"107","messageId":"108","endLine":154,"endColumn":14},{"ruleId":"109","severity":1,"message":"110","line":62,"column":8,"nodeType":"111","endLine":62,"endColumn":10,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":4,"column":1,"nodeType":"115","endLine":6,"endColumn":2},{"ruleId":"100","severity":1,"message":"116","line":1,"column":16,"nodeType":"102","messageId":"103","endLine":1,"endColumn":25},{"ruleId":"100","severity":1,"message":"117","line":2,"column":9,"nodeType":"102","messageId":"103","endLine":2,"endColumn":21},{"ruleId":"113","severity":1,"message":"114","line":5,"column":1,"nodeType":"115","endLine":7,"endColumn":2},{"ruleId":"109","severity":1,"message":"118","line":46,"column":8,"nodeType":"111","endLine":46,"endColumn":10,"suggestions":"119"},{"ruleId":"100","severity":1,"message":"120","line":2,"column":25,"nodeType":"102","messageId":"103","endLine":2,"endColumn":44},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'setErrorAC' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLoggedIn'. Either include them or remove the dependency array.","ArrayExpression",["123"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","'todoListsApi' is defined but never used.","React Hook useEffect has missing dependencies: 'demo' and 'dispatch'. Either include them or remove the dependency array.",["124"],"'setAppInitializedAC' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},"Update the dependencies array to be: [demo, dispatch, isLoggedIn]",{"range":"129","text":"130"},"Update the dependencies array to be: [demo, dispatch]",{"range":"131","text":"132"},[1805,1807],"[demo, dispatch, isLoggedIn]",[1278,1280],"[demo, dispatch]"]